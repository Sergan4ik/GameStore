// <auto-generated />
using System;
using GameStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameStore.Migrations
{
    [DbContext(typeof(GamesDBContext))]
    [Migration("20220522152924_NGOA")]
    partial class NGOA
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.4.22229.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GameStore.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Game_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameId"), 1L, 1);

                    b.Property<int?>("AgePermission")
                        .HasColumnType("int")
                        .HasColumnName("Age_permission");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("GameStudioId")
                        .HasColumnType("int")
                        .HasColumnName("Game_Studio_Id");

                    b.Property<string>("Genre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("GameId");

                    b.HasIndex("GameStudioId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameStore.GameCopy", b =>
                {
                    b.Property<int>("CopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Copy_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyId"), 1L, 1);

                    b.Property<DateTime?>("BuyDate")
                        .HasColumnType("date")
                        .HasColumnName("Buy_date");

                    b.Property<int?>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("Game_Id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("CopyId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Game_copies", (string)null);
                });

            modelBuilder.Entity("GameStore.GameStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("StudioName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Studio_Name");

                    b.HasKey("Id");

                    b.ToTable("Game_Studios", (string)null);
                });

            modelBuilder.Entity("GameStore.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Game")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Rarity")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Game");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("GameStore.ItemsInInventory", b =>
                {
                    b.Property<int>("ItemCopyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Item_copy_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCopyId"), 1L, 1);

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("Owner_id");

                    b.Property<int?>("SourceItemId")
                        .HasColumnType("int")
                        .HasColumnName("Source_item_Id");

                    b.HasKey("ItemCopyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SourceItemId");

                    b.ToTable("Items_in_inventories", (string)null);
                });

            modelBuilder.Entity("GameStore.Promocode", b =>
                {
                    b.Property<string>("Promocode1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Promocode");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("Game")
                        .HasColumnType("int");

                    b.HasKey("Promocode1");

                    b.HasIndex("Game");

                    b.ToTable("Promocodes");
                });

            modelBuilder.Entity("GameStore.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("Balance")
                        .HasColumnType("money");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("Birth_date");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameStore.Game", b =>
                {
                    b.HasOne("GameStore.GameStudio", "GameStudio")
                        .WithMany("Games")
                        .HasForeignKey("GameStudioId")
                        .HasConstraintName("FK_Games_Game_Studios");

                    b.Navigation("GameStudio");
                });

            modelBuilder.Entity("GameStore.GameCopy", b =>
                {
                    b.HasOne("GameStore.Game", "Game")
                        .WithMany("GameCopies")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Game_copies_Games");

                    b.HasOne("GameStore.User", "User")
                        .WithMany("GameCopies")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Game_copies_Users");

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameStore.Item", b =>
                {
                    b.HasOne("GameStore.Game", "GameNavigation")
                        .WithMany("Items")
                        .HasForeignKey("Game")
                        .HasConstraintName("FK_Items_Games");

                    b.Navigation("GameNavigation");
                });

            modelBuilder.Entity("GameStore.ItemsInInventory", b =>
                {
                    b.HasOne("GameStore.User", "Owner")
                        .WithMany("ItemsInInventories")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_Items_in_inventories_Users");

                    b.HasOne("GameStore.Item", "SourceItem")
                        .WithMany("ItemsInInventories")
                        .HasForeignKey("SourceItemId")
                        .HasConstraintName("FK_Items_in_inventories_Items");

                    b.Navigation("Owner");

                    b.Navigation("SourceItem");
                });

            modelBuilder.Entity("GameStore.Promocode", b =>
                {
                    b.HasOne("GameStore.Game", "GameNavigation")
                        .WithMany("Promocodes")
                        .HasForeignKey("Game")
                        .HasConstraintName("FK_Promocodes_Games");

                    b.Navigation("GameNavigation");
                });

            modelBuilder.Entity("GameStore.Game", b =>
                {
                    b.Navigation("GameCopies");

                    b.Navigation("Items");

                    b.Navigation("Promocodes");
                });

            modelBuilder.Entity("GameStore.GameStudio", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameStore.Item", b =>
                {
                    b.Navigation("ItemsInInventories");
                });

            modelBuilder.Entity("GameStore.User", b =>
                {
                    b.Navigation("GameCopies");

                    b.Navigation("ItemsInInventories");
                });
#pragma warning restore 612, 618
        }
    }
}
